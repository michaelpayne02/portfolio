---
if (!Astro.params.slug) Astro.params.slug = 'index'
const { slug } = Astro.params
---

<view-count class='text-muted-foreground' data-slug={slug}>
	<p>
		<span id='viewcount' class='font-mono'>---</span>
		views
	</p>
</view-count>

<script>
	class ViewCount extends HTMLElement {
		constructor() {
			super()

			const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1))
			onIdle(async () => {
				const slug = document.querySelector<HTMLElement>('view-count')!.dataset.slug!

				fetch('/api/views/' + slug)
					.then((res) => res.json())
					.then((data: { count?: number }) => {
						data.count = data.count || 0
						this.querySelector('#viewcount')!.textContent = this.abbreviateNumber(data.count)
					})
			})
		}

		abbreviateNumber(value: number): string {
			if (value < 1000) {
				return value.toString()
			}

			const suffixes = ['', 'k', 'm', 'b', 't']
			const suffixNum = Math.floor(('' + value).length / 3)
			let shortValue = 0

			for (var precision = 2; precision >= 1; precision--) {
				shortValue = parseFloat(
					(suffixNum != 0 ? value / Math.pow(1000, suffixNum) : value).toPrecision(precision)
				)
				var dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g, '')
				if (dotLessShortValue.length <= 2) {
					break
				}
			}

			if (shortValue % 1 != 0) return shortValue.toFixed(1) + suffixes[suffixNum]
			return shortValue + suffixes[suffixNum]
		}
	}
	customElements.define('view-count', ViewCount)
</script>
