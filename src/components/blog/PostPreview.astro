---
import type { HTMLTag, Polymorphic } from 'astro/types'
import type { CollectionEntry } from 'astro:content'

import FormattedDate from '../FormattedDate.astro'
import { truncate } from '@/utils'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  project: CollectionEntry<'projects'>
  withDesc?: boolean
}

const {
  as: Tag = 'div',
  project,
  withDesc = false,
  ...props
} = Astro.props as Props<HTMLTag>
const postDate = project.data.updatedDate ?? project.data.publishDate

const reload = { 'data-astro-reload': project.data.reload }
---

<li
  class='flex flex-col gap-2 sm:flex-row sm:gap-x-4 [&_q]:basis-full'
  {...props}
>
  <FormattedDate class='min-w-[120px] font-mono' date={postDate} />

  <Tag>
    {project.data.draft && <span class='text-red-500'>(Draft) </span>}
    <a
      data-astro-prefetch
      {...reload}
      href={`/projects/${project.slug}/`}
      class='transition hover:text-muted-foreground'
    >
      {project.data.title}
    </a>
    {
      withDesc && (
        <p class='line-clamp-3 italic text-muted-foreground'>
          {truncate(project.data.description, 100)}
        </p>
      )
    }
  </Tag>
</li>
