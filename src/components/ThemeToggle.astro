<theme-toggle class='ms-2 sm:ms-4'>
	<button class='relative rounded-md border border-border p-1.5 transition-all hover:bg-border'>
		<span class='sr-only'>Dark Theme</span>
		<svg
			xmlns='http://www.w3.org/2000/svg'
			aria-hidden='true'
			viewBox='0 0 24 24'
			stroke-width='1.5'
			class='h-6 w-6 scale-100 fill-none stroke-current opacity-100 transition-all transition-all dark:hidden dark:scale-0 dark:opacity-0'
		>
			<path
				stroke-linecap='round'
				stroke-linejoin='round'
				d='M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z'
			></path>
		</svg>
		<svg
			xmlns='http://www.w3.org/2000/svg'
			viewBox='0 0 24 24'
			stroke-width='1.5'
			class='hidden h-6 w-6 scale-0 fill-none stroke-current opacity-0 transition-all transition-all dark:block dark:scale-100 dark:opacity-100'
		>
			<path
				stroke-linecap='round'
				stroke-linejoin='round'
				d='M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z'
			></path>
		</svg>
	</button>
</theme-toggle>

<script>
	// Note that if you fire the theme-change event outside of this component, it will not be reflected in the button's aria-checked attribute
	import { rootInDarkMode } from '@/utils'

	class ThemeToggle extends HTMLElement {
		#controller: AbortController | undefined

		connectedCallback() {
			const button = this.querySelector('button')!
			// set aria role value
			button.setAttribute('role', 'switch')
			button.setAttribute('aria-checked', String(rootInDarkMode()))
			// Abort signal
			const { signal } = (this.#controller = new AbortController())

			// button event
			button.addEventListener(
				'click',
				() => {
					// invert theme
					let themeChangeEvent = new CustomEvent('theme-change', {
						detail: {
							theme: rootInDarkMode() ? 'light' : 'dark'
						}
					})
					// dispatch event -> ThemeProvider.astro
					document.dispatchEvent(themeChangeEvent)

					// set the aria-checked attribute
					button.setAttribute('aria-checked', String(rootInDarkMode()))
				},
				{ signal }
			)
		}

		disconnectedCallback() {
			this.#controller?.abort()
		}
	}

	customElements.define('theme-toggle', ThemeToggle)
</script>
