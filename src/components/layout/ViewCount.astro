---
const path = Astro.url.pathname == '/' ? '/index' : Astro.url.pathname
---

<view-count class='text-center text-sm text-muted-foreground' data-path={path}>
  <span id='viewcount' class='font-mono'>--</span>
  views
</view-count>

<script>
  interface Views {
    slug: string
    count: number
  }
  class ViewCount extends HTMLElement {
    constructor() {
      super()

      const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1))
      onIdle(async () => {
        const viewcount = document.querySelector<ViewCount>(
          'view-count'
        ) as HTMLSpanElement

        const span = document.querySelector<HTMLSpanElement>(
          '#viewcount'
        ) as HTMLSpanElement

        const path = viewcount.dataset.path

        const res = await fetch('/api/views' + path)
        if (!res.ok) {
          throw new Error('Unable to load viewcount')
        }

        const json = (await res.json()) as Views
        span.textContent = json.count.toString()
      })
    }
  }

  customElements.define('view-count', ViewCount)
</script>
