---
export const prerender = true

import type { GetStaticPaths, Page } from 'astro'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'

import Button from '@components/Button.astro'
import Pagination from '@components/Paginator.astro'
import PostPreview from '@components/blog/PostPreview.astro'
import PageLayout from '@layouts/Base.astro'
import { getAllPosts, getUniqueTags, sortMDByDate } from '@utils'

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getAllPosts()
	const allPostsByDate = sortMDByDate(allPosts)
	const uniqueTags = getUniqueTags(allPosts)
	return paginate(allPostsByDate, { pageSize: 10, props: { uniqueTags } })
}) satisfies GetStaticPaths

interface Props {
	page: Page<CollectionEntry<'project'>>
	uniqueTags: string[]
}

const { page, uniqueTags } = Astro.props

const meta = {
	description: 'Projects',
	title: 'Projects'
}

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Projects`,
			url: page.url.prev
		}
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Projects →`,
			url: page.url.next
		}
	})
}
---

<PageLayout meta={meta}>
	<div class='w-full'>
		<Button transition:persist='back' title='Back' href='/' style='button'>
			<Icon slot='icon-before' name='heroicons:arrow-left' class='h-4 w-4' />
		</Button>

		<h1 class='mb-6 mt-5 text-2xl font-bold'>Projects</h1>
		{page.data.length === 0 && <p>No projects yet.</p>}

		{
			page.data.length > 0 && (
				<div class='grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8'>
					<section aria-label='Projects list'>
						<ul class='flex flex-col gap-y-4 text-start'>
							{page.data.map((p) => (
								<PostPreview project={p} withDesc />
							))}
						</ul>
						<Pagination {...paginationProps} />
					</section>
					{!!uniqueTags.length && (
						<aside>
							<h2 class='mb-4 flex items-center text-lg font-semibold'>
								<Icon name='heroicons:tag' class='h-6 w-6' />
								Tags
							</h2>
							<ul class='text-bgColor flex flex-wrap gap-2'>
								{uniqueTags.map((tag) => (
									<li>
										<Button title={tag} href={`/tags/${tag}/`} style='pill' />
									</li>
								))}
							</ul>
							<span class='mt-4 block sm:text-end'>
								<a aria-label='View all post categories' class='' href='/tags/' data-astro-prefetch>
									View all →
								</a>
							</span>
						</aside>
					)}
				</div>
			)
		}

		<a
			href='mailto:michael@payne.cx'
			class='mt-16 inline-flex flex-row items-center gap-x-3 rounded-3xl border border-input px-4 py-2 text-sm shadow-sm transition-all hover:shadow-md'
		>
			<span class='relative flex items-center justify-center'>
				<span
					class='absolute inline-flex h-2 w-2 animate-ping rounded-full border border-blue-400 bg-blue-400 opacity-75'
				></span>
				<span class='relative inline-flex h-2 w-2 rounded-full bg-blue-400'></span>
			</span>

			<p class='font-medium'>Message</p>
		</a>
	</div>
</PageLayout>
